name: Continuous Integration

on:
  push:
    branches:
    - main

  pull_request:
    branches:
    - main

jobs:
  lint:
    runs-on: ubuntu-24.04

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image (cached)
      uses: docker/build-push-action@v6
      with:
        context: .
        tags: chesscxx:latest
        load: true
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Lint
      run: docker run --rm -v $(pwd)/:/chesscxx -w /chesscxx chesscxx:latest cmake -P cmake/lint.cmake

    - name: Spell check
      run: docker run --rm -v $(pwd)/:/chesscxx -w /chesscxx chesscxx:latest cmake -P cmake/spell.cmake

  iwyu:
    needs: [lint]

    runs-on: ubuntu-24.04

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image (cached)
      uses: docker/build-push-action@v6
      with:
        context: .
        tags: chesscxx:latest
        load: true
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: IWYU check
      run: docker run --rm -v $(pwd)/:/chesscxx -w /chesscxx chesscxx:latest cmake -P cmake/iwyu.cmake

  test:
    needs: [lint]

    runs-on: ubuntu-24.04

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image (cached)
      uses: docker/build-push-action@v6
      with:
        context: .
        tags: chesscxx:latest
        load: true
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Cache ccache directory
      uses: actions/cache@v4
      with:
        path: ~/ccache
        key: ${{ runner.os }}-ccache-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-ccache-

    - name: Cache ctcache directory
      uses: actions/cache@v4
      with:
        path: ~/ctcache
        key: ${{ runner.os }}-ctcache-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-ctcache-

    - name: Configure
      run: docker run --rm -v $(pwd)/:/chesscxx -w /chesscxx chesscxx:latest cmake --preset=ci-ubuntu

    - name: Build
      run: |
        docker run --rm -v $(pwd)/:/chesscxx -v ~/ccache:/root/.cache/ccache -v ~/ctcache:/tmp/ctcache-root -w /chesscxx chesscxx:latest \
        sh -c "
          ccache -p && ccache -s && ccache -z &&
          clang-tidy-cache --cache-dir && clang-tidy-cache --show-stats && clang-tidy-cache --zero-stats &&
          cmake --build build --config Release -j \$(nproc) &&
          ccache -s && clang-tidy-cache --show-stats
        "

    - name: Install
      run: docker run --rm -v $(pwd)/:/chesscxx -w /chesscxx chesscxx:latest cmake --install build --config Release --prefix prefix

    - name: Test
      run: docker run --rm -v $(pwd)/:/chesscxx -w /chesscxx chesscxx:latest sh -c "ctest --test-dir=build --output-on-failure --no-tests=error -C Release -j \$(nproc)"

    - name: Upload build directory
      uses: actions/upload-artifact@v4
      with:
        name: build-dir
        path: build

  benchmarks:
    needs: [test]

    runs-on: ubuntu-24.04

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image (cached)
      uses: docker/build-push-action@v6
      with:
        context: .
        tags: chesscxx:latest
        load: true
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Download build directory
      uses: actions/download-artifact@v4
      with:
        name: build-dir
        path: build

    - name: Run benchmarks
      run: |
        docker run --rm --privileged -v $(pwd)/:/chesscxx -w /chesscxx chesscxx:latest \
        sh -c "echo 0 > /proc/sys/kernel/randomize_va_space && cmake --build build -t run-benchmarks"

  docs:
    needs: [benchmarks, iwyu]

    runs-on: ubuntu-24.04

    if: github.ref == 'refs/heads/main' && github.event_name == 'push' && github.repository_owner == 'igorqs'

    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build Docker image (cached)
      uses: docker/build-push-action@v6
      with:
        context: .
        tags: chesscxx:latest
        load: true
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Download build directory
      uses: actions/download-artifact@v4
      with:
        name: build-dir
        path: previous-build

    - name: Generate examples outputs
      run: docker run --rm -v $(pwd)/:/chesscxx -w /chesscxx chesscxx:latest cmake --build build -t run-examples

    - name: Build docs
      run: |
        docker run --rm -v $(pwd)/:/chesscxx -w /chesscxx chesscxx:latest \
        cmake -P cmake/docs.cmake

    - name: Deploy docs
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: build/docs/sphinx
